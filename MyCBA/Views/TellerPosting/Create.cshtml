@model MyCBA.ViewModels.TellerPostingViewModels
@{

    ViewBag.Title = "Post transactions into Customer Accounts";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    MyCBA.Core.Models.ApplicationDbContext _context = new MyCBA.Core.Models.ApplicationDbContext();
    var IsBusinessOpened = _context.BusinessConfigs.Where(c => c.IsBusinessOpen == true).FirstOrDefault();
    var businessConfig = _context.BusinessConfigs.ToList();
    if (businessConfig.Count == 0)
    {
        <p>Business Configuration is not yet setup</p>
    }
    else
    {
        if (IsBusinessOpened != null)
        {

            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
        <div class="form-horizontal col-md-6">
            @if (TempData["message"]!=null)
            {
                if (TempData["message"].ToString() == "Error")
                {
                <div class="alert alert-danger">
                    <strong>Insufficient Balance&nbsp;</strong>
                </div>
                }
                else if (TempData["message"].ToString() == "TillError")
                {
                <div class="alert alert-danger">
                    <strong>You do not have sufficient cash in your Till Account&nbsp;</strong>
                </div>
                }
                else if (TempData["message"].ToString() == "Success")
                {
                <div class="alert alert-success">
                    <strong>Post successful&nbsp;</strong>
                </div>
                }
                else if (TempData["message"].ToString() == "Closed")
                {
                <div class="alert alert-error">
                    <strong>Customer's Account is Closed&nbsp;</strong>
                </div>

                }
            }

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id)
            @Html.HiddenFor(model => model.customerId)

            <span id="error" class="text-red"></span>
            <div class="form-group">
                @Html.LabelFor(model => model.customerAcctNum)
                @Html.DisplayFor(model => model.customerAcctNum)
                @*@Html.ValidationMessageFor(model => model.customerAcctNum, "", new { @class = "text-danger" })*@
                <span id="customerAcctNumerror" class="text-red"></span>

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.customerName)
                @Html.DisplayFor(model => model.customerName)
                @*@Html.ValidationMessageFor(model => model.customerName, "", new { @class = "text-danger" })*@
                <span id="customerNameerror" class="text-red"></span>

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.postingType)
                @Html.EnumDropDownListFor(model => model.postingType, "Choose Option", new { @class = "form-control", required = "required", @data_live_search = "true" })
                @Html.ValidationMessageFor(model => model.postingType, "", new { @class = "text-danger" })
                <span id="postingTypeerror" class="text-red"></span>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Amount)
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", type = "number", required = "required", step = "any", minlength = 3, min = 0.00, maxlength = 15 } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                <span id="Amounterror" class="text-red"></span>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Narration)
                @Html.TextAreaFor(model => model.Narration, new { @class = "form-control", minlength = 5, maxlength = 255, required = "required" })
                @Html.ValidationMessageFor(model => model.Narration, "", new { @class = "text-danger" })
                <span id="Narrationerror" class="text-red"></span>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="SUBMIT" class="btn btn-default" />
                </div>
            </div>
        </div>

            }

            @section ViewSpecificJavascript
    {
                <script>
                    $(document).ready(function () {

                        $('#Narration').keyup(function () {
                            value = $(this).val();
                            if (value.length < 5 || value.length > 255) {
                                $("input[type = 'submit']").attr("disabled", true);
                                e.preventDefault();
                                $("#Narrationerror").html("Narration can only be between 3 or 255 characters");
                            } else {
                                $("input[type = 'submit']").attr("disabled", false);
                                $("#Narrationerror").html("");

                            }
                        })



                        $("form").submit(function (e) {

                            var postingType = $('#postingType').val();
                            var amount = $('#Amount').val();
                            var nar = $('#Narration').val();
                            if (nar == "" || amount == 0 || postingType == 0) {
                                e.preventDefault();
                                $("input[type = 'submit']").attr("disabled", true);
                                $("#error").html("All fields are required");
                            }

                            else {
                                $("input[type = 'submit']").attr("disabled", false);
                                $("#error").html("");
                            }


                        })
                    })
                </script>
            }
        }
        else
        {
            <p> Sorry business is closed, you can't perform any transactions until business is opened </p>
        }
    }

}