@using System.Web.Optimization
@model MyCBA.ViewModels.UserViewModels
@{
    ViewBag.Title = "Register";
    Layout = null;
}

@Styles.Render("~/Bundles/css")
@using (Html.BeginForm("Register", "Account", FormMethod.Post))
{

    @Html.AntiForgeryToken()
<div class=" form-signin">
    <div class="text-center  mb-4">
        <h1>Register</h1>
    </div>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <span id="error" class="text-red "></span>
    @if (TempData["Message"] == null) { }
    else if (TempData["Message"].ToString() == "Success")
    {
        <div class="alert alert-success">
            <p>@TempData["Message"] <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> </p>

        </div>

    }
    else if (TempData["Message"].ToString() == "Error")
    {
        <div class="alert alert-error">
            <p>@TempData["Message"] <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> </p>

        </div>

    }
    else if (TempData["Message"].ToString() == "Email error")
    {
        <div class="alert alert-error">
            <p>An error ocurred while sending the mail, Check your Internet Connection <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> </p>

        </div>

    }
    <div class="form-group">
        @Html.LabelFor(model => model.fullName)
        @Html.EditorFor(model => model.fullName, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = 255, pattern = "^[A-Z\\sa-z]+$", minlength = 6 } })
        @Html.ValidationMessageFor(model => model.fullName, "", new { @class = "text-danger" })
        <span id="fullNameerror" class="text-red"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.username)
        @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = 255, pattern = "^[A-Z\\sa-z]+$", minlength = 5 } })
        @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
        <span id="usernameerror" class="text-red"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.email)
        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @type = "email", required = "required", minlength = 9, maxlength = 255 } })
        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
        <span id="emailerror" class="text-red"></span>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.phoneNumber)
        @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control", pattern = "0\\d+$", @type = "phone", required = "required", maxlength = 11, minlength = 11 } })
        @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
        <span id="phoneNumbererror" class="text-red"></span>
    </div>
    @if (Model.Branches != null || Model.Roles != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.branchId)
            @Html.DropDownListFor(model => model.branchId, new SelectList(Model.Branches,
                "id", "name"),"Choose an Option", new {@class = "form-control", required="required", @data_live_search = "true" })
            @Html.ValidationMessageFor(model => model.branchId, "", new { @class = "text-danger" })
            <span id="branchNameerror" class="text-red"></span>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.roleId)
            @Html.DropDownListFor(model => model.roleId, new SelectList(Model.Roles,
                "id", "name"),"Choose an Option", new {@class = "form-control", required="required", @data_live_search = "true" })
            @Html.ValidationMessageFor(model => model.roleId, "", new { @class = "text-danger" })
            <span id="roleerror" class="text-red"></span>
        </div>
    }
    else
    {
        <div class="form-group ">
            @Html.LabelFor(m => m.branchId)
            @Html.DropDownListFor(m=>m.branchId, new[] {
           new SelectListItem() { Text = "Yaba", Value = "1" } },
           "Choose an Option", new { @class = "form-control",required="required", @data_live_search = "true" })

            @Html.ValidationMessageFor(model => model.branchId, "", new { @class = "text-danger" })
        </div>
        <div class="form-group ">
            @Html.LabelFor(m => m.roleId)
            @Html.DropDownListFor(m=>m.roleId, new[] {
           new SelectListItem() { Text = "Admin", Value = "1" } },
           "Choose an Option", new { @class = "form-control",required="required", @data_live_search = "true" })

            @Html.ValidationMessageFor(model => model.roleId, "", new { @class = "text-danger" })
        </div>



    }

    <div class="form-group">
        <button class="btn btn-lg btn-block" onmouseover="this.style.color = '#333', this.style.background='#ddd'"onmouseout="this.style.color = '#ddd', this.style.background='#333'" type="submit" style ="background-color:#333;color:#ddd;" type="submit" @*style="background-color:#333"*@>Register</button>
        <p class="mt-5 mb-3 text-muted text-center"><b>Debs</b>CBA&copy; 2019</p>
    </div>
</div>
        }

        @section ViewSpecificJavascript
    {
            <script>
                $(document).ready(function () {
                    //$("input[type = 'submit']").attr("disabled", true);

                    //$('#fullName').keyup(function () {
                    //    value = $(this).val();
                    //    if (value.length < 5 || value.length > 255) {
                    //    $("input[type = 'submit']").attr("disabled", true);
                    //        $("#fullNameerror").html("FullName can only be between 5 or 255 characters");
                    //    } else {
                    //        var NameRegex = "/^[a-zA-Z0–9.!#$%&’*+\/=?^_`{|}~-]+@@[a-zA-Z0–9](?:[a-zA-Z0–9-]{0,61} [a-zA-Z0–9])?(?:\.[a-zA-Z0–9](?:[a-zA-Z0–9-]{0,61}[a-zA-Z0–9])?)*$/";

                    //        if (!NameRegex.test($("#fullName").val())) {
                    //            $("#fullNameerreor").html("Re-enter fullName");
                    //            e.preventDefault();
                    //            $("input[type = 'submit']").attr("disabled", true);
                    //        }
                    //        else {
                    //            $("#fullNameerreor").html("");
                    //            $("input[type = 'submit']").attr("disabled", false);

                    //        }

                    //    }
                    //})

                    //$('#username').keyup(function () {
                    //    value = $(this).val();
                    //    if (value.length < 3 || value.length > 30) {
                    //        $("input[type = 'submit']").attr("disabled", true);

                    //        $("#usernameerror").html("Username can only be between 3 or 30 characters");
                    //    } else {
                    //        $("#usernameerror").html("");
                    //        $("input[type = 'submit']").attr("disabled", false);



                    //    }
                    //})


                    //$('#email').keyup(function () {
                    //    value = $(this).val();
                    //    if (value.length < 9 || value.length > 255) {
                    //        var EmailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
                    //        if (EmailRegex.test('#email')) {
                    //            $("#emailerror").html("Email Address can only be between 9 or 255 characters");
                    //            $("input[type = 'submit']").attr("disabled", true);
                    //        }
                    //        else {
                    //            $("#emailerror").html("Email format is not correct");
                    //            $("input[type = 'submit']").attr("disabled", true);
                    //        }
                    //    } else {
                            
                    //        var EmailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
                    //        if (EmailRegex.test('#email')) {
                    //            $("#emailerror").html("");
                    //            $("input[type = 'submit']").attr("disabled", false);
                    //        }
                    //        else {
                    //            $("#emailerror").html("Email format is not correct");
                    //            $("input[type = 'submit']").attr("disabled", true);

                    //        }


                    //    }
                    //})

                    //$('#phoneNumber').keyup(function () {
                    //    value = $(this).val();
                    //    if (value.length < 11 || value.length > 11) {
                    //        $("#phoneNumbererror").html("Telephone Number can only be between 11 characters");
                    //    } else {
                    //        var phoneRegex = /^[+]?[\s./0-9]*[(]?[0-9]{1,4}[)]?[-\s./0-9]*$/g;
                    //        if (phoneRegex.test('#phoneNumber')) {
                    //            $("#phoneNumbererror").html("");
                    //            $("input[type = 'submit']").attr("disabled", false);
                    //        }
                    //        else {
                    //            $("#phoneNumbererror").html("Telephone number format is not correct");
                    //            $("input[type = 'submit']").attr("disabled", true);
                    //        }


                    //    }
                    //})

                    //var EmailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
                    //var phoneRegex = /^[+]?[\s./0-9]*[(]?[0-9]{1,4}[)]?[-\s./0-9]*$/g;

                    // ;
                    $("form").submit(function (e) {

                        var fullName = $('#fullName').val();
                        var username = $('#username').val();
                        var email = $('#email').val();
                        var phoneNumber = $('#phoneNumber').val();
                        var branchName = $('#branchId').val();
                        var role = $('#roleId').val();
                        if (fullName == "" || username == "" || email == "" || username == "" || phoneNumber == "" || branchName == "" || role == "") {
                            e.preventDefault();
                            $("input[type = 'submit']").attr("disabled", true);
                            $("#error").html("All fields are required");
                        }
                        else {
                            $("input[type = 'submit']").attr("disabled", false);

                            $("#error").html("");
                        }

                    })
                })
            </script>
        }
