@model MyCBA.Core.Models.Customer
@{
    ViewBag.Title = "Edit Customer Information";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="col-md-6">

    @if (TempData["Message"]!=null)
    {
        if (TempData["Message"].ToString() == "Success")
        {
            <div class="alert alert-success">
                <p>@TempData["Message"] <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> </p>

            </div>

        }
        else if (TempData["Message"].ToString() == "Exist")
        {
            <div class="alert alert-error">
                <p>Email Address or Telephone Number exist <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> </p>

            </div>

        }
        else if (TempData["Message"].ToString() == "Error")
        {
            <div class="alert alert-error">
                <p>@TempData["Message"] <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> </p>

            </div>

        }
    }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
        <div class="form-group ">
            @Html.LabelFor(m => m.name)
            @Html.EditorFor(m => m.name, new { @class = "form-control", maxlength = 255, pattern = "^[A-Z\\sa-z]+$", minlength = 5, required = "required" })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
        <div class="form-group ">
            @Html.LabelFor(m => m.address)
            @Html.EditorFor(m => m.address, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
        </div>

        <div class="form-group ">
            @Html.LabelFor(m => m.phoneNumber)
            @Html.EditorFor(m => m.phoneNumber, new { @class = "form-control", required = "required", pattern = "0\\d+$", @type = "phone", maxlength = 11, minlength = 11 })
            @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
        </div>

        <div class="form-group ">
            @Html.LabelFor(m => m.email)
            @Html.EditorFor(m => m.email, new { @class = "form-control", @type = "email", required = "required", minlength = 9, maxlength = 255 })
            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
        </div>
        <div class="form-group ">
            @Html.LabelFor(m => m.gender)
            @Html.DropDownListFor(m=>m.gender, new[] {
           new SelectListItem() { Text = "Female", Value = "Female" },
           new SelectListItem() { Text = "Male", Value = "Male" } },
           "Choose an Option", new { @class = "form-control",required="required", @data_live_search = "true" })

            @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="SUBMIT" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section ViewSpecificJavascript
    {
    <script>
        $(document).ready(function () {
            setTimeout(function () {
                $(".alert").fadeOut(100, null);
            },
                3000);
        });
    </script>
}